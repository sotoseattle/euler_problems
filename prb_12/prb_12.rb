# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

require 'prime'

def find_all_prime_factors_of(n)
  primes = [1] + n.prime_division.map { |a, b| [a]*b }
  primes.flatten
end

def combination_of_factors(factors, how_many)
  factors.combination(how_many).to_a.map { |a| a.reduce(:*) }
end

def all_possible_factors(n)
  primes = find_all_prime_factors_of(n)
  (1..primes.size)
    .map { |n| combination_of_factors(primes, n) }
    .flatten
    .uniq
end

def triangular_with_divisors_over(m)
  triangular_number = 1
  (2..1_000_000).each do |i|
    triangular_number += i
    return triangular_number if all_possible_factors(triangular_number).count > m
  end
  nil
end

p triangular_with_divisors_over(500)
# 76576500
